[{"path":"/articles/ddm.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"haven’t, install easyRT package running: Load necessary packages.","code":"remotes::install_github(\"DominiqueMakowski/easyRT\") library(tidyverse) library(easystats) library(patchwork) library(brms) library(easyRT)"},{"path":"/articles/ddm.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"DDMs appear quite complicated implement. tried use HDDM PyDDM Python, look R alternatives, didn’t find solution easy use flexible enough (use-case) ---box. seems like powerful brms currently best way approach , though steep learning curve… Thus, massive thanks @singmann, made blogpost, rtdists fddm packages.","code":""},{"path":"/articles/ddm.html","id":"theory","dir":"Articles","previous_headings":"","what":"Theory","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"graphical illustration Wiener diffusion model two-choice reaction times. evidence counter starts value \\(\\alpha*\\beta\\) evolves random increments. mean increment \\(\\delta\\) . process terminates soon accrued evidence exceeds \\(\\alpha\\) deceeds 0. decision process starts time \\(\\tau\\) stimulus presentation terminates reaction time. figure Wabersich Vandekerckhove (2014). Drift Diffusion Models, aka Diffusion Decision Model, aka DDMs class sequential models model RT drifting process towards response. useful jointly model reaction time binary outcome, 2 different choices accuracy (.e., “correct” vs “error”). based Wiener distributions defined 4 parameters: drift: drift rate (delta \\(\\delta\\)) average slope accumulation process towards boundaries. larger (absolute value ) drift rate, effective evidence accumulation corresponding response option. drift rate close 0 suggests ambiguous stimulus. Typical range: [-5, 5]. bs: boundary separation threshold (alpha \\(\\alpha\\)) distance two decision bounds interpreted measure response caution (.e., speed-accuracy trade-, high bs related high accuracy). represents amount evidence needed make response. Typical range: [0.5, 2]. bias: Initial bias (beta \\(\\beta\\)) responses. starting point accumulation process. Typical range: [0.3, 0.7]. ndt: non-decision time (tau \\(\\tau\\)) captures non-decisional process, stimulus encoding, motor processes, etc. Typical range: [0.1, 0.5] s. Additional variability parameters can include: ndt_var: Also called st0. Typical range: [0, 0.2] s.","code":""},{"path":"/articles/ddm.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple Example","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"example, going simulate data 4 conditions known parameters, investigate can model recover parameters.","code":""},{"path":"/articles/ddm.html","id":"data","dir":"Articles","previous_headings":"Simple Example","what":"Data","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"Condition 1: \\(drift~\\delta = -1,~bias~\\beta = 0.4\\) Condition 2: \\(drift~\\delta = 0,~bias~\\beta = 0.5\\) Condition 3: \\(drift~\\delta = 1,~bias~\\beta = 0.6\\) Condition 4: \\(drift~\\delta = 2,~bias~\\beta = 0.7\\) Boundary separation bs ndt fixed 1 0.15 conditions. Let’s visualize raw data theoretical distribution comes .","code":"sim <- ddm_data(n = c(200, 200, 200, 200),                 drift = c(-1, 0, 1, 2),                 bs = 1,                 bias = c(0.4, 0.5, 0.6, 0.7),                 ndt = 0.2)  ddm_plot(sim) df <- sim$data head(df) ##          rt response condition ## 1 0.3283990    lower         1 ## 2 0.2857288    lower         1 ## 3 0.4052673    lower         1 ## 4 0.3514263    lower         1 ## 5 0.4020190    lower         1 ## 6 0.3850511    lower         1"},{"path":"/articles/ddm.html","id":"fddm","dir":"Articles","previous_headings":"Simple Example","what":"FDDM","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"Unfortunately, fdmm doesn’t seem work throws following error:","code":"model <- fddm::ddm(rt + response ~ condition, data = df) summary(model) Error in nlminb(start = init, objective = objective, gradient = gradient,  :   NA/NaN gradient evaluation"},{"path":"/articles/ddm.html","id":"formula","dir":"Articles","previous_headings":"Simple Example","what":"Formula","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"Let’s start modelling drift rate. @singmaann gives rationale setting identity link: drift rate can take value (.e., -Inf Inf), default link function “identity” (.e., transformation) retain. three parameters restricted range. boundary needs larger 0, non-decision time needs larger 0 smaller smallest RT, starting point needs 0 1. default link-functions respect constraints use “log” first two parameters “logit” bias. certainly possibility, number drawbacks leading use “identity” link function parameters. First, parameters transformed, priors need specified untransformed scale. Second, individual-levels deviations (.e., random-effects estimates) assumed come multivariate normal distribution. Parameters transformations entail individual-deviations normally distributed untransformed scale. Likewise, correlations parameter deviations across parameters also untransformed scale. make interpretation random-effects difficult. specifying parameters without transformation (.e., link = “identity”) care must taken priors places mass values inside allowed range. Likewise, starting values need inside allowed range. Using identity link function also comes drawbacks discussed end. However, long parameter outside allowed range occur rarely, model can converge successfully makes interpretation easier.","code":"formula <- bf(rt | dec(response) ~ 0 + condition)  family <- wiener(link_bs = \"identity\",                  link_ndt = \"identity\",                  link_bias = \"identity\")"},{"path":"/articles/ddm.html","id":"priors","dir":"Articles","previous_headings":"Simple Example","what":"Priors","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"b: priors effect conditions drift rate centred around 0 give enough probability mass plausible values (typical range drift [-5, 5]). student distribution fatter tails Gaussian one, dealing better outliers (Cauchy distribution also good alternative). ndt: priors non-decision time gamma distribution, naturally excludes 0. set slightly skewed left, mass covers 0 - 0.5 s (don’t expect non-decision processes take 0.5 s). Note upper bound set minimum RT value. bs: priors boundary separation wider gamma distribution (excluding 0), likelihood peaking around 1. bias: priors beta distribution (naturally bounded \\(]0, 1[\\)) centered around 0.5.","code":"# get_prior(formula, data = df, family = family) prior <- c(   prior(\"student_t(3, 0, 2)\", class = \"b\"),   set_prior(\"gamma(1.5, 3)\", class = \"ndt\", ub = \"min_Y\"),   set_prior(\"gamma(3, 2)\", class = \"bs\"),   set_prior(\"beta(1.3, 1.3)\", class = \"bias\") ) |>  brms::validate_prior(formula,                            family = family,                            data = df)  prior_data <- brms:::prepare_print_prior(prior) |>    mutate(ub = ifelse(ub == \"min_Y\", min(df$rt), ub),          Parameter = ifelse(coef != \"\", paste0(class, \"_\", coef), class)     ) |>    filter(Parameter != \"b\") |>    ggdist::parse_dist()     prior_data |>    ggplot(aes(y = Parameter, xdist = .dist_obj)) +   ggdist::stat_halfeye(geom = \"slab\", n = 10001, normalize=\"xy\") +   # geom_vline(xintercept = 0.3) +   scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +   coord_cartesian(xlim = c(-5, 5)) +    labs(title = \"Priors\") +    theme_minimal()"},{"path":"/articles/ddm.html","id":"sampling","dir":"Articles","previous_headings":"Simple Example","what":"Sampling","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"","code":"init_func <- function(chain_id=1) {   list(bias = 0.5, bs = 1 , ndt = 0.2, b = rep(0, 4)) }  # str(m$fit@inits)   m <- brm(formula,          data = df,          family = family,          prior = prior,          algorithm = \"sampling\",          init = init_func)                    # # If using `algorithm = \"fullrank\"`, add the following:          # iter = 10000, # N of convergence iterations, defaults to 2000.          # output_samples = 4000, # N of posterior samples to draw and save, defaults to 1000.          # elbo_samples = 100, # N of samples for Monte Carlo estimate of ELBO (objective function), defaults to 100.          # tol_rel_obj = 0.01, # convergence tolerance on the relative norm of the objective, defaults to 0.01.          # importance_resampling = TRUE # adjust the draws at the optimum to be more like draws from the posterior distribution m ##  Family: wiener  ##   Links: mu = identity; bs = identity; ndt = identity; bias = identity  ## Formula: rt | dec(response) ~ 0 + condition  ##    Data: df (Number of observations: 800)  ##   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; ##          total post-warmup draws = 4000 ##  ## Population-Level Effects:  ##            Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS ## condition1    -1.47      0.15    -1.76    -1.17 1.00     4274     2862 ## condition2    -0.15      0.14    -0.42     0.13 1.00     4090     3158 ## condition3     1.29      0.15     0.99     1.58 1.00     4500     3172 ## condition4     2.47      0.18     2.12     2.83 1.00     4634     2823 ##  ## Family Specific Parameters:  ##      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS ## bs       1.13      0.02     1.09     1.17 1.00     4429     3429 ## ndt      0.20      0.00     0.19     0.20 1.00     4195     3120 ## bias     0.52      0.01     0.50     0.55 1.00     2882     2927 ##  ## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS ## and Tail_ESS are effective sample size measures, and Rhat is the potential ## scale reduction factor on split chains (at convergence, Rhat = 1). as.data.frame(m) |>    select(starts_with(\"b_\"), bs, ndt, bias) |>    datawizard::data_to_long(names_to=\"Parameter\", rows_to = \"iter\") |>    ggplot(aes(y = Parameter)) +   ggdist::stat_halfeye(data = prior_data, aes(xdist = .dist_obj), geom = \"slab\", n = 10001, normalize=\"xy\") +   # ggdist::stat_dotsinterval(aes(x = value, fill = Parameter), color = \"black\", slab_linewidth = NA, scale = 1, dotsize = 2, normalize = \"xy\") +   ggdist::stat_slabinterval(aes(x = value, fill = Parameter), slab_linewidth = NA, scale = 1, normalize = \"xy\") +   geom_vline(xintercept = 0, linetype = \"dashed\") +    coord_cartesian(xlim = c(-2.5, 5)) +   theme_minimal()"},{"path":"/articles/ddm.html","id":"posterior-predictive-check","dir":"Articles","previous_headings":"Simple Example","what":"Posterior Predictive Check","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"Note: sure predictions (got get_predicted()) …","code":"brms::pp_check(m) # performance::check_predictions(m)  df$Predicted <- as.numeric(get_predicted(m, predict = \"prediction\", iterations = 100)) # posterior_predict(m, newdata=df, draws = 10)  ddm_plot(mutate(df, rt = Predicted), density = sim$density)"},{"path":[]},{"path":"/articles/ddm.html","id":"formula-1","dir":"Articles","previous_headings":"Better Model","what":"Formula","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"","code":"df$condition <- as.numeric(df$condition) - 1  formula <- bf(rt | dec(response) ~ 0 + Intercept + condition,               bias ~ 0 + Intercept + condition)  family <- wiener(link_bs = \"identity\",                  link_ndt = \"identity\",                  link_bias = \"identity\")"},{"path":"/articles/ddm.html","id":"priors-1","dir":"Articles","previous_headings":"Better Model","what":"Priors","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"","code":"# get_prior(formula, data = df, family = family) prior <- c(   prior(\"student_t(3, 0, 1)\", class = \"b\", coef=\"condition\", dpar = \"\"),   set_prior(\"student_t(3, 0, 1)\", class = \"b\", coef=\"Intercept\", dpar = \"\"),   set_prior(\"student_t(3, 0, 0.05)\", class = \"b\", coef=\"condition\", dpar = \"bias\"),   set_prior(\"normal(0.5, 0.15)\", class = \"b\", coef = \"Intercept\", dpar = \"bias\"),   set_prior(\"gamma(1.5, 3)\", class = \"ndt\", ub = \"min_Y\"),   set_prior(\"gamma(3, 2)\", class = \"bs\") ) |>  brms::validate_prior(formula,                            family = family,                            data = df)   prior_data <- brms:::prepare_print_prior(prior) |>    filter(prior != \"(flat)\") |>    mutate(ub = ifelse(ub == \"min_Y\", min(df$rt), ub),          Parameter = paste0(            ifelse(coef != \"\", paste0(class, \"_\", coef), class),             ifelse(dpar != \"\", paste0(\"_\", dpar), \"\"))     ) |>    ggdist::parse_dist()     prior_data |>    ggplot(aes(y = Parameter, xdist = .dist_obj)) +   ggdist::stat_halfeye(geom = \"slab\", n = 10001, normalize=\"xy\") +   # geom_vline(xintercept = 0.3) +   scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +   coord_cartesian(xlim = c(-5, 5)) +    labs(title = \"Priors\") +    theme_minimal()"},{"path":"/articles/ddm.html","id":"sampling-1","dir":"Articles","previous_headings":"Better Model","what":"Sampling","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"","code":"# stancode(m) init_func <- function(chain_id=1) {   list(b = rep(0, 2),        b_bias = c(0.5, 0),        bs = 1, ndt = 0.2) }  # m$fit@inits  m <- brm(formula,          data = df,          family = family,          prior = prior,          algorithm = \"sampling\",          init = init_func)                    # # If using `algorithm = \"fullrank\"`, add the following:          # iter = 10000, # N of convergence iterations, defaults to 2000.          # output_samples = 4000, # N of posterior samples to draw and save, defaults to 1000.          # elbo_samples = 100, # N of samples for Monte Carlo estimate of ELBO (objective function), defaults to 100.          # tol_rel_obj = 0.01, # convergence tolerance on the relative norm of the objective, defaults to 0.01.          # importance_resampling = TRUE # adjust the draws at the optimum to be more like draws from the posterior distribution m ##  Family: wiener  ##   Links: mu = identity; bs = identity; ndt = identity; bias = identity  ## Formula: rt | dec(response) ~ 0 + Intercept + condition  ##          bias ~ 0 + Intercept + condition ##    Data: df (Number of observations: 800)  ##   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; ##          total post-warmup draws = 4000 ##  ## Population-Level Effects:  ##                Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS ## Intercept         -1.25      0.14    -1.53    -0.96 1.00     1784     2219 ## condition          1.19      0.09     1.02     1.36 1.00     1612     2361 ## bias_Intercept     0.48      0.02     0.44     0.52 1.00     1961     2428 ## bias_condition     0.03      0.01     0.01     0.05 1.00     1842     2092 ##  ## Family Specific Parameters:  ##     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS ## bs      1.14      0.02     1.10     1.18 1.00     3076     2768 ## ndt     0.20      0.00     0.19     0.20 1.00     2877     2305 ##  ## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS ## and Tail_ESS are effective sample size measures, and Rhat is the potential ## scale reduction factor on split chains (at convergence, Rhat = 1). as.data.frame(m) |>    select(b_condition_bias = b_bias_condition, b_Intercept_bias = b_bias_Intercept, b_condition, b_Intercept, bs, ndt) |>    datawizard::data_to_long(names_to=\"Parameter\", rows_to = \"iter\") |>    ggplot(aes(y = Parameter)) +   ggdist::stat_halfeye(data = prior_data, aes(xdist = .dist_obj), geom = \"slab\", n = 10001, normalize=\"xy\") +   # ggdist::stat_dotsinterval(aes(x = value, fill = Parameter), color = \"black\", slab_linewidth = NA, scale = 1, dotsize = 2, normalize = \"xy\") +   ggdist::stat_slabinterval(aes(x = value, fill = Parameter), slab_linewidth = NA, scale = 1, normalize = \"xy\") +   geom_vline(xintercept = 0, linetype = \"dashed\") +    coord_cartesian(xlim = c(-2.5, 5)) +   theme_minimal()"},{"path":"/articles/ddm.html","id":"posterior-predictive-check-1","dir":"Articles","previous_headings":"Better Model","what":"Posterior Predictive Check","title":"Drift Diffusion Model (DDM) in R: A Tutorial","text":"","code":"brms::pp_check(m) # performance::check_predictions(m)  df$Predicted <- as.numeric(get_predicted(m, predict = \"prediction\", iterations = 100)) # posterior_predict(m, newdata=df, draws = 10)  ddm_plot(mutate(df, rt = Predicted, condition = as.factor(condition)), density = sim$density)"},{"path":"/articles/exgaussian.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Ex-Gaussian models in R: A Tutorial","text":"haven’t, install easyRT package running: Load necessary packages.","code":"remotes::install_github(\"DominiqueMakowski/easyRT\") library(tidyverse) library(easystats) library(rtdists) library(easyRT)"},{"path":"/articles/exgaussian.html","id":"theory","dir":"Articles","previous_headings":"","what":"Theory","title":"Ex-Gaussian models in R: A Tutorial","text":"Rather relying default model families, Gaussian models, one can select models accurately represents distribution outcome variable. instance, models based Exponentially modified Gaussian (ex-Gaussian) distributions, suited typical skewed shape (Balota Yap 2011; Matzke Wagenmakers 2009). distribution convolution normal exponential distributions three parameters, namely \\(\\mu\\) (mu) \\(\\sigma\\) (sigma) - mean standard deviation Gaussian distribution - \\(\\tau\\) (tau) - exponential component distribution. Intuitively, arguments reflect centrality, width tail dominance, respectively (see figure ). Beyond descriptive value types models, tried interpret parameters terms cognitive mechanisms, arguing instance changes Gaussian components reflect changes attentional processes (e.g., “time required organization execution motor response”; Hohle, 1965), whereas changes exponential component reflect changes intentional (.e., decision-related) processes (Kieffaber et al. 2006). However, Matzke Wagenmakers (2009) demonstrate direct correspondence ex-Gaussian parameters cognitive mechanisms, underline value primarily descriptive tools, rather models cognition per se. Descriptively, three parameters can interpreted : Mu \\(\\mu\\): location / centrality RTs. correspond mean symmetrical distribution. Sigma \\(\\sigma\\): variability dispersion RTs. Akin standard deviation normal distributions. Tau \\(\\tau\\): Tail weight / skewness distribution. Note parameters independent respect distribution characteristics: example different distributions location dispersion. Although tail weight parameter changed, whole dsitribution appears shift centre mass. Hence, one careful note interpret values mu directly “mean” distribution “peak” sigma SD “width”. Example Ex-gaussian Distributions location dispersion.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dominique Makowski. Author, maintainer.            @Dom_Makowski","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Makowski D (2023). easyRT: Tools Examples Fitting (Hierarchical) Drift Diffusion Models R. R package version 0.1.0.","code":"@Manual{,   title = {easyRT: Tools and Examples for Fitting (Hierarchical) Drift Diffusion Models in R},   author = {Dominique Makowski},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"easyrt","dir":"","previous_headings":"","what":"Tools and Examples for Fitting (Hierarchical) Drift Diffusion Models in R","title":"Tools and Examples for Fitting (Hierarchical) Drift Diffusion Models in R","text":"Tools examples modelling Reaction Times R [WORK PROGRESS]","code":""},{"path":"/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Tools and Examples for Fitting (Hierarchical) Drift Diffusion Models in R","text":"repo started attempt understanding implementing sequential models, starting (Hierarchical) Drift Diffusion Models (DDMs) reaction times R. Please don’t hesitate open issue discuss suggest things improved clarified.","code":""},{"path":"/index.html","id":"content","dir":"","previous_headings":"","what":"Content","title":"Tools and Examples for Fitting (Hierarchical) Drift Diffusion Models in R","text":"Reaction time (RTs) traditionally modelled using traditional linear models (e.g., ANOVAs). However, problematic RTs normally distributed. popular mitigation method transform data (e.g., log-transform), good idea (Schramm & Rouder, 2019). Instead, one use statistical models describe generate RT-like data. start reading: Lindelov’s overview RT models: absolute must-read. De Boeck & Jeon (2019): paper providing overview RT models. repository contain following vignettes: Drift Diffusion Model (DDM) R: Tutorial Ex-Gaussian models R: Tutorial Note: work--progress. Please get touch want contribute help, ’s good way learning.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools and Examples for Fitting (Hierarchical) Drift Diffusion Models in R","text":"","code":"remotes::install_github(\"DominiqueMakowski/easyRT\")  library(easyRT)"},{"path":"/index.html","id":"what-does-this-package-do","dir":"","previous_headings":"","what":"What does this package do?","title":"Tools and Examples for Fitting (Hierarchical) Drift Diffusion Models in R","text":"much. mostly vignettes, also convenience functions generate plot drift diffusion models. ’ll see evolves time.","code":"sim <- ddm_data(drift = c(0, 1), bs = 1, bias = 0.5, ndt = 0.2)  ddm_plot(sim)"},{"path":"/reference/ddm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate DDM Data — ddm_data","title":"Simulate DDM Data — ddm_data","text":"Simulate response time data specific parameters following diffusion model. data generated using rdiffusion(), check documentation.","code":""},{"path":"/reference/ddm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate DDM Data — ddm_data","text":"","code":"ddm_data(   n = 100,   drift = 0,   bs = 1,   bias = 0.5,   ndt = 0.2,   ndt_var = 0.1,   include_parameters = FALSE,   ... )"},{"path":"/reference/ddm_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate DDM Data — ddm_data","text":"n Number observations. drift Drift parameter. Typical range: [-5, 5]. bs boundary separation parameter. Typical range: [0.5, 2]. bias Bias parameter. Default 0.5*bs. ndt Non-decision time parameter.  Typical range: [0.1, 0.5] s. ndt_var Variability non-decision time. Typical range: [0, 0.2] s. include_parameters Whether add parameters data. ... arguments pass functions, additional controls ddm_traces().","code":""},{"path":"/reference/ddm_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate DDM Data — ddm_data","text":"","code":"df <- ddm_data(n = c(100, 100), drift = c(1, 0)) summary(df$data) #>        rt          response   condition #>  Min.   :0.2433   lower: 79   1:100     #>  1st Qu.:0.3399   upper:121   2:100     #>  Median :0.4211                         #>  Mean   :0.4724                         #>  3rd Qu.:0.5789                         #>  Max.   :1.2933"},{"path":"/reference/ddm_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot DDM Data — ddm_plot","title":"Plot DDM Data — ddm_plot","text":"Plot data.","code":""},{"path":"/reference/ddm_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot DDM Data — ddm_plot","text":"","code":"ddm_plot(data, ...)  ddm_plot_upper(   data,   density = NULL,   xlim = c(0, 2),   hist_alpha = 1/3,   density_linewidth = 1,   theme = \"default\",   ... )  ddm_plot_lower(   data,   density = NULL,   xlim = c(0, 2),   hist_alpha = 1/3,   density_linewidth = 1,   theme = \"default\",   ... )  ddm_plot_traces(   traces,   trace_alpha = 0.8,   trace_linewidth = 0.5,   xlim = c(0, 2),   theme = \"default\",   ... )"},{"path":"/reference/ddm_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot DDM Data — ddm_plot","text":"data Either object ddm_data()) dataframe containing columns \"rt\", \"response\" (lower upper) \"condition\". ... arguments pass functions, additional controls hist(). density Data density lines (typically obtained ddm_data()). xlim X-axis limits. theme Can NULL (useful customizing) \"default\". traces Data trace lines (typically obtained ddm_data()). trace_alpha, hist_alpha Alpha trace lines histograms. trace_linewidth, density_linewidth Alpha trace lines histograms.","code":""},{"path":"/reference/ddm_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot DDM Data — ddm_plot","text":"","code":"library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.2.2 library(patchwork)  # Simulate data sim <- ddm_data(n=1000, drift = c(1, 0), n_traces = 20)  ddm_plot(sim, xlim = c(0, 1))   # Customize data <- sim$data density <- sim$density traces <- sim$traces  ddm_plot_upper(data, density = density, theme = NULL) /   ddm_plot_traces(traces, theme = NULL) /   ddm_plot_lower(data, density = density, theme = NULL)"},{"path":"/reference/ddm_traces.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot DDM Data — ddm_traces","title":"Plot DDM Data — ddm_traces","text":"Plot data.","code":""},{"path":"/reference/ddm_traces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot DDM Data — ddm_traces","text":"","code":"ddm_traces(   n_traces = 5,   time_max = 2,   step = 0.01,   drift = 0,   bs = 1,   bias = 0.5,   ndt = 0.2,   ndt_var = 0.1,   ... )"},{"path":"/reference/ddm_traces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot DDM Data — ddm_traces","text":"n_traces Number traces. time_max Span x-axis seconds. step Step size seconds. drift Drift parameter. Typical range: [-5, 5]. bs boundary separation parameter. Typical range: [0.5, 2]. bias Bias parameter. Default 0.5*bs. ndt Non-decision time parameter.  Typical range: [0.1, 0.5] s. ndt_var Variability non-decision time. Typical range: [0, 0.2] s. ... used now.","code":""},{"path":"/reference/ddm_traces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot DDM Data — ddm_traces","text":"","code":"data_traces <- ddm_traces(n_traces = 5) data_traces #>               y         x iter #> 1    0.50000000 0.2721936    1 #> 2    0.29111033 0.2821936    1 #> 3    0.34615423 0.2921936    1 #> 4    0.47415075 0.3021936    1 #> 5    0.48573300 0.3121936    1 #> 6    0.59414881 0.3221936    1 #> 7    0.59297908 0.3321936    1 #> 8    0.60873516 0.3421936    1 #> 9    0.54180556 0.3521936    1 #> 10   0.31875553 0.3621936    1 #> 11   0.28289836 0.3721936    1 #> 12   0.39626947 0.3821936    1 #> 13   0.34528868 0.3921936    1 #> 14   0.55029310 0.4021936    1 #> 15   0.68930329 0.4121936    1 #> 16   0.69747987 0.4221936    1 #> 17   0.73753899 0.4321936    1 #> 18   0.88728268 0.4421936    1 #> 19   1.00000000 0.4521936    1 #> 20   1.00000000 0.4621936    1 #> 21   1.00000000 0.4721936    1 #> 22   1.00000000 0.4821936    1 #> 23   1.00000000 0.4921936    1 #> 24   1.00000000 0.5021936    1 #> 25   1.00000000 0.5121936    1 #> 26   1.00000000 0.5221936    1 #> 27   1.00000000 0.5321936    1 #> 28   1.00000000 0.5421936    1 #> 29   1.00000000 0.5521936    1 #> 30   1.00000000 0.5621936    1 #> 31   1.00000000 0.5721936    1 #> 32   1.00000000 0.5821936    1 #> 33   1.00000000 0.5921936    1 #> 34   1.00000000 0.6021936    1 #> 35   1.00000000 0.6121936    1 #> 36   1.00000000 0.6221936    1 #> 37   1.00000000 0.6321936    1 #> 38   1.00000000 0.6421936    1 #> 39   1.00000000 0.6521936    1 #> 40   1.00000000 0.6621936    1 #> 41   1.00000000 0.6721936    1 #> 42   1.00000000 0.6821936    1 #> 43   1.00000000 0.6921936    1 #> 44   1.00000000 0.7021936    1 #> 45   1.00000000 0.7121936    1 #> 46   1.00000000 0.7221936    1 #> 47   1.00000000 0.7321936    1 #> 48   1.00000000 0.7421936    1 #> 49   1.00000000 0.7521936    1 #> 50   1.00000000 0.7621936    1 #> 51   1.00000000 0.7721936    1 #> 52   1.00000000 0.7821936    1 #> 53   1.00000000 0.7921936    1 #> 54   1.00000000 0.8021936    1 #> 55   1.00000000 0.8121936    1 #> 56   1.00000000 0.8221936    1 #> 57   1.00000000 0.8321936    1 #> 58   1.00000000 0.8421936    1 #> 59   1.00000000 0.8521936    1 #> 60   1.00000000 0.8621936    1 #> 61   1.00000000 0.8721936    1 #> 62   1.00000000 0.8821936    1 #> 63   1.00000000 0.8921936    1 #> 64   1.00000000 0.9021936    1 #> 65   1.00000000 0.9121936    1 #> 66   1.00000000 0.9221936    1 #> 67   1.00000000 0.9321936    1 #> 68   1.00000000 0.9421936    1 #> 69   1.00000000 0.9521936    1 #> 70   1.00000000 0.9621936    1 #> 71   1.00000000 0.9721936    1 #> 72   1.00000000 0.9821936    1 #> 73   1.00000000 0.9921936    1 #> 74   1.00000000 1.0021936    1 #> 75   1.00000000 1.0121936    1 #> 76   1.00000000 1.0221936    1 #> 77   1.00000000 1.0321936    1 #> 78   1.00000000 1.0421936    1 #> 79   1.00000000 1.0521936    1 #> 80   1.00000000 1.0621936    1 #> 81   1.00000000 1.0721936    1 #> 82   1.00000000 1.0821936    1 #> 83   1.00000000 1.0921936    1 #> 84   1.00000000 1.1021936    1 #> 85   1.00000000 1.1121936    1 #> 86   1.00000000 1.1221936    1 #> 87   1.00000000 1.1321936    1 #> 88   1.00000000 1.1421936    1 #> 89   1.00000000 1.1521936    1 #> 90   1.00000000 1.1621936    1 #> 91   1.00000000 1.1721936    1 #> 92   1.00000000 1.1821936    1 #> 93   1.00000000 1.1921936    1 #> 94   1.00000000 1.2021936    1 #> 95   1.00000000 1.2121936    1 #> 96   1.00000000 1.2221936    1 #> 97   1.00000000 1.2321936    1 #> 98   1.00000000 1.2421936    1 #> 99   1.00000000 1.2521936    1 #> 100  1.00000000 1.2621936    1 #> 101  1.00000000 1.2721936    1 #> 102  1.00000000 1.2821936    1 #> 103  1.00000000 1.2921936    1 #> 104  1.00000000 1.3021936    1 #> 105  1.00000000 1.3121936    1 #> 106  1.00000000 1.3221936    1 #> 107  1.00000000 1.3321936    1 #> 108  1.00000000 1.3421936    1 #> 109  1.00000000 1.3521936    1 #> 110  1.00000000 1.3621936    1 #> 111  1.00000000 1.3721936    1 #> 112  1.00000000 1.3821936    1 #> 113  1.00000000 1.3921936    1 #> 114  1.00000000 1.4021936    1 #> 115  1.00000000 1.4121936    1 #> 116  1.00000000 1.4221936    1 #> 117  1.00000000 1.4321936    1 #> 118  1.00000000 1.4421936    1 #> 119  1.00000000 1.4521936    1 #> 120  1.00000000 1.4621936    1 #> 121  1.00000000 1.4721936    1 #> 122  1.00000000 1.4821936    1 #> 123  1.00000000 1.4921936    1 #> 124  1.00000000 1.5021936    1 #> 125  1.00000000 1.5121936    1 #> 126  1.00000000 1.5221936    1 #> 127  1.00000000 1.5321936    1 #> 128  1.00000000 1.5421936    1 #> 129  1.00000000 1.5521936    1 #> 130  1.00000000 1.5621936    1 #> 131  1.00000000 1.5721936    1 #> 132  1.00000000 1.5821936    1 #> 133  1.00000000 1.5921936    1 #> 134  1.00000000 1.6021936    1 #> 135  1.00000000 1.6121936    1 #> 136  1.00000000 1.6221936    1 #> 137  1.00000000 1.6321936    1 #> 138  1.00000000 1.6421936    1 #> 139  1.00000000 1.6521936    1 #> 140  1.00000000 1.6621936    1 #> 141  1.00000000 1.6721936    1 #> 142  1.00000000 1.6821936    1 #> 143  1.00000000 1.6921936    1 #> 144  1.00000000 1.7021936    1 #> 145  1.00000000 1.7121936    1 #> 146  1.00000000 1.7221936    1 #> 147  1.00000000 1.7321936    1 #> 148  1.00000000 1.7421936    1 #> 149  1.00000000 1.7521936    1 #> 150  1.00000000 1.7621936    1 #> 151  1.00000000 1.7721936    1 #> 152  1.00000000 1.7821936    1 #> 153  1.00000000 1.7921936    1 #> 154  1.00000000 1.8021936    1 #> 155  1.00000000 1.8121936    1 #> 156  1.00000000 1.8221936    1 #> 157  1.00000000 1.8321936    1 #> 158  1.00000000 1.8421936    1 #> 159  1.00000000 1.8521936    1 #> 160  1.00000000 1.8621936    1 #> 161  1.00000000 1.8721936    1 #> 162  1.00000000 1.8821936    1 #> 163  1.00000000 1.8921936    1 #> 164  1.00000000 1.9021936    1 #> 165  1.00000000 1.9121936    1 #> 166  1.00000000 1.9221936    1 #> 167  1.00000000 1.9321936    1 #> 168  1.00000000 1.9421936    1 #> 169  1.00000000 1.9521936    1 #> 170  1.00000000 1.9621936    1 #> 171  1.00000000 1.9721936    1 #> 172  1.00000000 1.9821936    1 #> 173  1.00000000 1.9921936    1 #> 174  1.00000000 2.0021936    1 #> 175  1.00000000 2.0121936    1 #> 176  1.00000000 2.0221936    1 #> 177  1.00000000 2.0321936    1 #> 178  1.00000000 2.0421936    1 #> 179  1.00000000 2.0521936    1 #> 180  1.00000000 2.0621936    1 #> 181  1.00000000 2.0721936    1 #> 182  1.00000000 2.0821936    1 #> 183  1.00000000 2.0921936    1 #> 184  1.00000000 2.1021936    1 #> 185  1.00000000 2.1121936    1 #> 186  1.00000000 2.1221936    1 #> 187  1.00000000 2.1321936    1 #> 188  1.00000000 2.1421936    1 #> 189  1.00000000 2.1521936    1 #> 190  1.00000000 2.1621936    1 #> 191  1.00000000 2.1721936    1 #> 192  1.00000000 2.1821936    1 #> 193  1.00000000 2.1921936    1 #> 194  1.00000000 2.2021936    1 #> 195  1.00000000 2.2121936    1 #> 196  1.00000000 2.2221936    1 #> 197  1.00000000 2.2321936    1 #> 198  1.00000000 2.2421936    1 #> 199  1.00000000 2.2521936    1 #> 200  1.00000000 2.2621936    1 #> 201  1.00000000 2.2721936    1 #> 202  0.50000000 0.2728862    2 #> 203  0.47751486 0.2828862    2 #> 204  0.38584042 0.2928862    2 #> 205  0.12753010 0.3028862    2 #> 206  0.00000000 0.3128862    2 #> 207  0.00000000 0.3228862    2 #> 208  0.00000000 0.3328862    2 #> 209  0.00000000 0.3428862    2 #> 210  0.00000000 0.3528862    2 #> 211  0.00000000 0.3628862    2 #> 212  0.00000000 0.3728862    2 #> 213  0.00000000 0.3828862    2 #> 214  0.00000000 0.3928862    2 #> 215  0.00000000 0.4028862    2 #> 216  0.00000000 0.4128862    2 #> 217  0.00000000 0.4228862    2 #> 218  0.00000000 0.4328862    2 #> 219  0.00000000 0.4428862    2 #> 220  0.00000000 0.4528862    2 #> 221  0.00000000 0.4628862    2 #> 222  0.00000000 0.4728862    2 #> 223  0.00000000 0.4828862    2 #> 224  0.00000000 0.4928862    2 #> 225  0.00000000 0.5028862    2 #> 226  0.00000000 0.5128862    2 #> 227  0.00000000 0.5228862    2 #> 228  0.00000000 0.5328862    2 #> 229  0.00000000 0.5428862    2 #> 230  0.00000000 0.5528862    2 #> 231  0.00000000 0.5628862    2 #> 232  0.00000000 0.5728862    2 #> 233  0.00000000 0.5828862    2 #> 234  0.00000000 0.5928862    2 #> 235  0.00000000 0.6028862    2 #> 236  0.00000000 0.6128862    2 #> 237  0.00000000 0.6228862    2 #> 238  0.00000000 0.6328862    2 #> 239  0.00000000 0.6428862    2 #> 240  0.00000000 0.6528862    2 #> 241  0.00000000 0.6628862    2 #> 242  0.00000000 0.6728862    2 #> 243  0.00000000 0.6828862    2 #> 244  0.00000000 0.6928862    2 #> 245  0.00000000 0.7028862    2 #> 246  0.00000000 0.7128862    2 #> 247  0.00000000 0.7228862    2 #> 248  0.00000000 0.7328862    2 #> 249  0.00000000 0.7428862    2 #> 250  0.00000000 0.7528862    2 #> 251  0.00000000 0.7628862    2 #> 252  0.00000000 0.7728862    2 #> 253  0.00000000 0.7828862    2 #> 254  0.00000000 0.7928862    2 #> 255  0.00000000 0.8028862    2 #> 256  0.00000000 0.8128862    2 #> 257  0.00000000 0.8228862    2 #> 258  0.00000000 0.8328862    2 #> 259  0.00000000 0.8428862    2 #> 260  0.00000000 0.8528862    2 #> 261  0.00000000 0.8628862    2 #> 262  0.00000000 0.8728862    2 #> 263  0.00000000 0.8828862    2 #> 264  0.00000000 0.8928862    2 #> 265  0.00000000 0.9028862    2 #> 266  0.00000000 0.9128862    2 #> 267  0.00000000 0.9228862    2 #> 268  0.00000000 0.9328862    2 #> 269  0.00000000 0.9428862    2 #> 270  0.00000000 0.9528862    2 #> 271  0.00000000 0.9628862    2 #> 272  0.00000000 0.9728862    2 #> 273  0.00000000 0.9828862    2 #> 274  0.00000000 0.9928862    2 #> 275  0.00000000 1.0028862    2 #> 276  0.00000000 1.0128862    2 #> 277  0.00000000 1.0228862    2 #> 278  0.00000000 1.0328862    2 #> 279  0.00000000 1.0428862    2 #> 280  0.00000000 1.0528862    2 #> 281  0.00000000 1.0628862    2 #> 282  0.00000000 1.0728862    2 #> 283  0.00000000 1.0828862    2 #> 284  0.00000000 1.0928862    2 #> 285  0.00000000 1.1028862    2 #> 286  0.00000000 1.1128862    2 #> 287  0.00000000 1.1228862    2 #> 288  0.00000000 1.1328862    2 #> 289  0.00000000 1.1428862    2 #> 290  0.00000000 1.1528862    2 #> 291  0.00000000 1.1628862    2 #> 292  0.00000000 1.1728862    2 #> 293  0.00000000 1.1828862    2 #> 294  0.00000000 1.1928862    2 #> 295  0.00000000 1.2028862    2 #> 296  0.00000000 1.2128862    2 #> 297  0.00000000 1.2228862    2 #> 298  0.00000000 1.2328862    2 #> 299  0.00000000 1.2428862    2 #> 300  0.00000000 1.2528862    2 #> 301  0.00000000 1.2628862    2 #> 302  0.00000000 1.2728862    2 #> 303  0.00000000 1.2828862    2 #> 304  0.00000000 1.2928862    2 #> 305  0.00000000 1.3028862    2 #> 306  0.00000000 1.3128862    2 #> 307  0.00000000 1.3228862    2 #> 308  0.00000000 1.3328862    2 #> 309  0.00000000 1.3428862    2 #> 310  0.00000000 1.3528862    2 #> 311  0.00000000 1.3628862    2 #> 312  0.00000000 1.3728862    2 #> 313  0.00000000 1.3828862    2 #> 314  0.00000000 1.3928862    2 #> 315  0.00000000 1.4028862    2 #> 316  0.00000000 1.4128862    2 #> 317  0.00000000 1.4228862    2 #> 318  0.00000000 1.4328862    2 #> 319  0.00000000 1.4428862    2 #> 320  0.00000000 1.4528862    2 #> 321  0.00000000 1.4628862    2 #> 322  0.00000000 1.4728862    2 #> 323  0.00000000 1.4828862    2 #> 324  0.00000000 1.4928862    2 #> 325  0.00000000 1.5028862    2 #> 326  0.00000000 1.5128862    2 #> 327  0.00000000 1.5228862    2 #> 328  0.00000000 1.5328862    2 #> 329  0.00000000 1.5428862    2 #> 330  0.00000000 1.5528862    2 #> 331  0.00000000 1.5628862    2 #> 332  0.00000000 1.5728862    2 #> 333  0.00000000 1.5828862    2 #> 334  0.00000000 1.5928862    2 #> 335  0.00000000 1.6028862    2 #> 336  0.00000000 1.6128862    2 #> 337  0.00000000 1.6228862    2 #> 338  0.00000000 1.6328862    2 #> 339  0.00000000 1.6428862    2 #> 340  0.00000000 1.6528862    2 #> 341  0.00000000 1.6628862    2 #> 342  0.00000000 1.6728862    2 #> 343  0.00000000 1.6828862    2 #> 344  0.00000000 1.6928862    2 #> 345  0.00000000 1.7028862    2 #> 346  0.00000000 1.7128862    2 #> 347  0.00000000 1.7228862    2 #> 348  0.00000000 1.7328862    2 #> 349  0.00000000 1.7428862    2 #> 350  0.00000000 1.7528862    2 #> 351  0.00000000 1.7628862    2 #> 352  0.00000000 1.7728862    2 #> 353  0.00000000 1.7828862    2 #> 354  0.00000000 1.7928862    2 #> 355  0.00000000 1.8028862    2 #> 356  0.00000000 1.8128862    2 #> 357  0.00000000 1.8228862    2 #> 358  0.00000000 1.8328862    2 #> 359  0.00000000 1.8428862    2 #> 360  0.00000000 1.8528862    2 #> 361  0.00000000 1.8628862    2 #> 362  0.00000000 1.8728862    2 #> 363  0.00000000 1.8828862    2 #> 364  0.00000000 1.8928862    2 #> 365  0.00000000 1.9028862    2 #> 366  0.00000000 1.9128862    2 #> 367  0.00000000 1.9228862    2 #> 368  0.00000000 1.9328862    2 #> 369  0.00000000 1.9428862    2 #> 370  0.00000000 1.9528862    2 #> 371  0.00000000 1.9628862    2 #> 372  0.00000000 1.9728862    2 #> 373  0.00000000 1.9828862    2 #> 374  0.00000000 1.9928862    2 #> 375  0.00000000 2.0028862    2 #> 376  0.00000000 2.0128862    2 #> 377  0.00000000 2.0228862    2 #> 378  0.00000000 2.0328862    2 #> 379  0.00000000 2.0428862    2 #> 380  0.00000000 2.0528862    2 #> 381  0.00000000 2.0628862    2 #> 382  0.00000000 2.0728862    2 #> 383  0.00000000 2.0828862    2 #> 384  0.00000000 2.0928862    2 #> 385  0.00000000 2.1028862    2 #> 386  0.00000000 2.1128862    2 #> 387  0.00000000 2.1228862    2 #> 388  0.00000000 2.1328862    2 #> 389  0.00000000 2.1428862    2 #> 390  0.00000000 2.1528862    2 #> 391  0.00000000 2.1628862    2 #> 392  0.00000000 2.1728862    2 #> 393  0.00000000 2.1828862    2 #> 394  0.00000000 2.1928862    2 #> 395  0.00000000 2.2028862    2 #> 396  0.00000000 2.2128862    2 #> 397  0.00000000 2.2228862    2 #> 398  0.00000000 2.2328862    2 #> 399  0.00000000 2.2428862    2 #> 400  0.00000000 2.2528862    2 #> 401  0.00000000 2.2628862    2 #> 402  0.00000000 2.2728862    2 #> 403  0.50000000 0.2892020    3 #> 404  0.43641719 0.2992020    3 #> 405  0.50011713 0.3092020    3 #> 406  0.41638784 0.3192020    3 #> 407  0.42525324 0.3292020    3 #> 408  0.40078280 0.3392020    3 #> 409  0.34024658 0.3492020    3 #> 410  0.43542872 0.3592020    3 #> 411  0.41555327 0.3692020    3 #> 412  0.49905326 0.3792020    3 #> 413  0.51054228 0.3892020    3 #> 414  0.48934652 0.3992020    3 #> 415  0.36660657 0.4092020    3 #> 416  0.52392932 0.4192020    3 #> 417  0.53310538 0.4292020    3 #> 418  0.51605230 0.4392020    3 #> 419  0.43126071 0.4492020    3 #> 420  0.19441359 0.4592020    3 #> 421  0.14764443 0.4692020    3 #> 422  0.04063275 0.4792020    3 #> 423  0.02542917 0.4892020    3 #> 424  0.00000000 0.4992020    3 #> 425  0.00000000 0.5092020    3 #> 426  0.00000000 0.5192020    3 #> 427  0.00000000 0.5292020    3 #> 428  0.00000000 0.5392020    3 #> 429  0.00000000 0.5492020    3 #> 430  0.00000000 0.5592020    3 #> 431  0.00000000 0.5692020    3 #> 432  0.00000000 0.5792020    3 #> 433  0.00000000 0.5892020    3 #> 434  0.00000000 0.5992020    3 #> 435  0.00000000 0.6092020    3 #> 436  0.00000000 0.6192020    3 #> 437  0.00000000 0.6292020    3 #> 438  0.00000000 0.6392020    3 #> 439  0.00000000 0.6492020    3 #> 440  0.00000000 0.6592020    3 #> 441  0.00000000 0.6692020    3 #> 442  0.00000000 0.6792020    3 #> 443  0.00000000 0.6892020    3 #> 444  0.00000000 0.6992020    3 #> 445  0.00000000 0.7092020    3 #> 446  0.00000000 0.7192020    3 #> 447  0.00000000 0.7292020    3 #> 448  0.00000000 0.7392020    3 #> 449  0.00000000 0.7492020    3 #> 450  0.00000000 0.7592020    3 #> 451  0.00000000 0.7692020    3 #> 452  0.00000000 0.7792020    3 #> 453  0.00000000 0.7892020    3 #> 454  0.00000000 0.7992020    3 #> 455  0.00000000 0.8092020    3 #> 456  0.00000000 0.8192020    3 #> 457  0.00000000 0.8292020    3 #> 458  0.00000000 0.8392020    3 #> 459  0.00000000 0.8492020    3 #> 460  0.00000000 0.8592020    3 #> 461  0.00000000 0.8692020    3 #> 462  0.00000000 0.8792020    3 #> 463  0.00000000 0.8892020    3 #> 464  0.00000000 0.8992020    3 #> 465  0.00000000 0.9092020    3 #> 466  0.00000000 0.9192020    3 #> 467  0.00000000 0.9292020    3 #> 468  0.00000000 0.9392020    3 #> 469  0.00000000 0.9492020    3 #> 470  0.00000000 0.9592020    3 #> 471  0.00000000 0.9692020    3 #> 472  0.00000000 0.9792020    3 #> 473  0.00000000 0.9892020    3 #> 474  0.00000000 0.9992020    3 #> 475  0.00000000 1.0092020    3 #> 476  0.00000000 1.0192020    3 #> 477  0.00000000 1.0292020    3 #> 478  0.00000000 1.0392020    3 #> 479  0.00000000 1.0492020    3 #> 480  0.00000000 1.0592020    3 #> 481  0.00000000 1.0692020    3 #> 482  0.00000000 1.0792020    3 #> 483  0.00000000 1.0892020    3 #> 484  0.00000000 1.0992020    3 #> 485  0.00000000 1.1092020    3 #> 486  0.00000000 1.1192020    3 #> 487  0.00000000 1.1292020    3 #> 488  0.00000000 1.1392020    3 #> 489  0.00000000 1.1492020    3 #> 490  0.00000000 1.1592020    3 #> 491  0.00000000 1.1692020    3 #> 492  0.00000000 1.1792020    3 #> 493  0.00000000 1.1892020    3 #> 494  0.00000000 1.1992020    3 #> 495  0.00000000 1.2092020    3 #> 496  0.00000000 1.2192020    3 #> 497  0.00000000 1.2292020    3 #> 498  0.00000000 1.2392020    3 #> 499  0.00000000 1.2492020    3 #> 500  0.00000000 1.2592020    3 #> 501  0.00000000 1.2692020    3 #> 502  0.00000000 1.2792020    3 #> 503  0.00000000 1.2892020    3 #> 504  0.00000000 1.2992020    3 #> 505  0.00000000 1.3092020    3 #> 506  0.00000000 1.3192020    3 #> 507  0.00000000 1.3292020    3 #> 508  0.00000000 1.3392020    3 #> 509  0.00000000 1.3492020    3 #> 510  0.00000000 1.3592020    3 #> 511  0.00000000 1.3692020    3 #> 512  0.00000000 1.3792020    3 #> 513  0.00000000 1.3892020    3 #> 514  0.00000000 1.3992020    3 #> 515  0.00000000 1.4092020    3 #> 516  0.00000000 1.4192020    3 #> 517  0.00000000 1.4292020    3 #> 518  0.00000000 1.4392020    3 #> 519  0.00000000 1.4492020    3 #> 520  0.00000000 1.4592020    3 #> 521  0.00000000 1.4692020    3 #> 522  0.00000000 1.4792020    3 #> 523  0.00000000 1.4892020    3 #> 524  0.00000000 1.4992020    3 #> 525  0.00000000 1.5092020    3 #> 526  0.00000000 1.5192020    3 #> 527  0.00000000 1.5292020    3 #> 528  0.00000000 1.5392020    3 #> 529  0.00000000 1.5492020    3 #> 530  0.00000000 1.5592020    3 #> 531  0.00000000 1.5692020    3 #> 532  0.00000000 1.5792020    3 #> 533  0.00000000 1.5892020    3 #> 534  0.00000000 1.5992020    3 #> 535  0.00000000 1.6092020    3 #> 536  0.00000000 1.6192020    3 #> 537  0.00000000 1.6292020    3 #> 538  0.00000000 1.6392020    3 #> 539  0.00000000 1.6492020    3 #> 540  0.00000000 1.6592020    3 #> 541  0.00000000 1.6692020    3 #> 542  0.00000000 1.6792020    3 #> 543  0.00000000 1.6892020    3 #> 544  0.00000000 1.6992020    3 #> 545  0.00000000 1.7092020    3 #> 546  0.00000000 1.7192020    3 #> 547  0.00000000 1.7292020    3 #> 548  0.00000000 1.7392020    3 #> 549  0.00000000 1.7492020    3 #> 550  0.00000000 1.7592020    3 #> 551  0.00000000 1.7692020    3 #> 552  0.00000000 1.7792020    3 #> 553  0.00000000 1.7892020    3 #> 554  0.00000000 1.7992020    3 #> 555  0.00000000 1.8092020    3 #> 556  0.00000000 1.8192020    3 #> 557  0.00000000 1.8292020    3 #> 558  0.00000000 1.8392020    3 #> 559  0.00000000 1.8492020    3 #> 560  0.00000000 1.8592020    3 #> 561  0.00000000 1.8692020    3 #> 562  0.00000000 1.8792020    3 #> 563  0.00000000 1.8892020    3 #> 564  0.00000000 1.8992020    3 #> 565  0.00000000 1.9092020    3 #> 566  0.00000000 1.9192020    3 #> 567  0.00000000 1.9292020    3 #> 568  0.00000000 1.9392020    3 #> 569  0.00000000 1.9492020    3 #> 570  0.00000000 1.9592020    3 #> 571  0.00000000 1.9692020    3 #> 572  0.00000000 1.9792020    3 #> 573  0.00000000 1.9892020    3 #> 574  0.00000000 1.9992020    3 #> 575  0.00000000 2.0092020    3 #> 576  0.00000000 2.0192020    3 #> 577  0.00000000 2.0292020    3 #> 578  0.00000000 2.0392020    3 #> 579  0.00000000 2.0492020    3 #> 580  0.00000000 2.0592020    3 #> 581  0.00000000 2.0692020    3 #> 582  0.00000000 2.0792020    3 #> 583  0.00000000 2.0892020    3 #> 584  0.00000000 2.0992020    3 #> 585  0.00000000 2.1092020    3 #> 586  0.00000000 2.1192020    3 #> 587  0.00000000 2.1292020    3 #> 588  0.00000000 2.1392020    3 #> 589  0.00000000 2.1492020    3 #> 590  0.00000000 2.1592020    3 #> 591  0.00000000 2.1692020    3 #> 592  0.00000000 2.1792020    3 #> 593  0.00000000 2.1892020    3 #> 594  0.00000000 2.1992020    3 #> 595  0.00000000 2.2092020    3 #> 596  0.00000000 2.2192020    3 #> 597  0.00000000 2.2292020    3 #> 598  0.00000000 2.2392020    3 #> 599  0.00000000 2.2492020    3 #> 600  0.00000000 2.2592020    3 #> 601  0.00000000 2.2692020    3 #> 602  0.00000000 2.2792020    3 #> 603  0.00000000 2.2892020    3 #> 604  0.50000000 0.2800295    4 #> 605  0.73772054 0.2900295    4 #> 606  0.94017724 0.3000295    4 #> 607  0.94941996 0.3100295    4 #> 608  1.00000000 0.3200295    4 #> 609  1.00000000 0.3300295    4 #> 610  1.00000000 0.3400295    4 #> 611  1.00000000 0.3500295    4 #> 612  1.00000000 0.3600295    4 #> 613  1.00000000 0.3700295    4 #> 614  1.00000000 0.3800295    4 #> 615  1.00000000 0.3900295    4 #> 616  1.00000000 0.4000295    4 #> 617  1.00000000 0.4100295    4 #> 618  1.00000000 0.4200295    4 #> 619  1.00000000 0.4300295    4 #> 620  1.00000000 0.4400295    4 #> 621  1.00000000 0.4500295    4 #> 622  1.00000000 0.4600295    4 #> 623  1.00000000 0.4700295    4 #> 624  1.00000000 0.4800295    4 #> 625  1.00000000 0.4900295    4 #> 626  1.00000000 0.5000295    4 #> 627  1.00000000 0.5100295    4 #> 628  1.00000000 0.5200295    4 #> 629  1.00000000 0.5300295    4 #> 630  1.00000000 0.5400295    4 #> 631  1.00000000 0.5500295    4 #> 632  1.00000000 0.5600295    4 #> 633  1.00000000 0.5700295    4 #> 634  1.00000000 0.5800295    4 #> 635  1.00000000 0.5900295    4 #> 636  1.00000000 0.6000295    4 #> 637  1.00000000 0.6100295    4 #> 638  1.00000000 0.6200295    4 #> 639  1.00000000 0.6300295    4 #> 640  1.00000000 0.6400295    4 #> 641  1.00000000 0.6500295    4 #> 642  1.00000000 0.6600295    4 #> 643  1.00000000 0.6700295    4 #> 644  1.00000000 0.6800295    4 #> 645  1.00000000 0.6900295    4 #> 646  1.00000000 0.7000295    4 #> 647  1.00000000 0.7100295    4 #> 648  1.00000000 0.7200295    4 #> 649  1.00000000 0.7300295    4 #> 650  1.00000000 0.7400295    4 #> 651  1.00000000 0.7500295    4 #> 652  1.00000000 0.7600295    4 #> 653  1.00000000 0.7700295    4 #> 654  1.00000000 0.7800295    4 #> 655  1.00000000 0.7900295    4 #> 656  1.00000000 0.8000295    4 #> 657  1.00000000 0.8100295    4 #> 658  1.00000000 0.8200295    4 #> 659  1.00000000 0.8300295    4 #> 660  1.00000000 0.8400295    4 #> 661  1.00000000 0.8500295    4 #> 662  1.00000000 0.8600295    4 #> 663  1.00000000 0.8700295    4 #> 664  1.00000000 0.8800295    4 #> 665  1.00000000 0.8900295    4 #> 666  1.00000000 0.9000295    4 #> 667  1.00000000 0.9100295    4 #> 668  1.00000000 0.9200295    4 #> 669  1.00000000 0.9300295    4 #> 670  1.00000000 0.9400295    4 #> 671  1.00000000 0.9500295    4 #> 672  1.00000000 0.9600295    4 #> 673  1.00000000 0.9700295    4 #> 674  1.00000000 0.9800295    4 #> 675  1.00000000 0.9900295    4 #> 676  1.00000000 1.0000295    4 #> 677  1.00000000 1.0100295    4 #> 678  1.00000000 1.0200295    4 #> 679  1.00000000 1.0300295    4 #> 680  1.00000000 1.0400295    4 #> 681  1.00000000 1.0500295    4 #> 682  1.00000000 1.0600295    4 #> 683  1.00000000 1.0700295    4 #> 684  1.00000000 1.0800295    4 #> 685  1.00000000 1.0900295    4 #> 686  1.00000000 1.1000295    4 #> 687  1.00000000 1.1100295    4 #> 688  1.00000000 1.1200295    4 #> 689  1.00000000 1.1300295    4 #> 690  1.00000000 1.1400295    4 #> 691  1.00000000 1.1500295    4 #> 692  1.00000000 1.1600295    4 #> 693  1.00000000 1.1700295    4 #> 694  1.00000000 1.1800295    4 #> 695  1.00000000 1.1900295    4 #> 696  1.00000000 1.2000295    4 #> 697  1.00000000 1.2100295    4 #> 698  1.00000000 1.2200295    4 #> 699  1.00000000 1.2300295    4 #> 700  1.00000000 1.2400295    4 #> 701  1.00000000 1.2500295    4 #> 702  1.00000000 1.2600295    4 #> 703  1.00000000 1.2700295    4 #> 704  1.00000000 1.2800295    4 #> 705  1.00000000 1.2900295    4 #> 706  1.00000000 1.3000295    4 #> 707  1.00000000 1.3100295    4 #> 708  1.00000000 1.3200295    4 #> 709  1.00000000 1.3300295    4 #> 710  1.00000000 1.3400295    4 #> 711  1.00000000 1.3500295    4 #> 712  1.00000000 1.3600295    4 #> 713  1.00000000 1.3700295    4 #> 714  1.00000000 1.3800295    4 #> 715  1.00000000 1.3900295    4 #> 716  1.00000000 1.4000295    4 #> 717  1.00000000 1.4100295    4 #> 718  1.00000000 1.4200295    4 #> 719  1.00000000 1.4300295    4 #> 720  1.00000000 1.4400295    4 #> 721  1.00000000 1.4500295    4 #> 722  1.00000000 1.4600295    4 #> 723  1.00000000 1.4700295    4 #> 724  1.00000000 1.4800295    4 #> 725  1.00000000 1.4900295    4 #> 726  1.00000000 1.5000295    4 #> 727  1.00000000 1.5100295    4 #> 728  1.00000000 1.5200295    4 #> 729  1.00000000 1.5300295    4 #> 730  1.00000000 1.5400295    4 #> 731  1.00000000 1.5500295    4 #> 732  1.00000000 1.5600295    4 #> 733  1.00000000 1.5700295    4 #> 734  1.00000000 1.5800295    4 #> 735  1.00000000 1.5900295    4 #> 736  1.00000000 1.6000295    4 #> 737  1.00000000 1.6100295    4 #> 738  1.00000000 1.6200295    4 #> 739  1.00000000 1.6300295    4 #> 740  1.00000000 1.6400295    4 #> 741  1.00000000 1.6500295    4 #> 742  1.00000000 1.6600295    4 #> 743  1.00000000 1.6700295    4 #> 744  1.00000000 1.6800295    4 #> 745  1.00000000 1.6900295    4 #> 746  1.00000000 1.7000295    4 #> 747  1.00000000 1.7100295    4 #> 748  1.00000000 1.7200295    4 #> 749  1.00000000 1.7300295    4 #> 750  1.00000000 1.7400295    4 #> 751  1.00000000 1.7500295    4 #> 752  1.00000000 1.7600295    4 #> 753  1.00000000 1.7700295    4 #> 754  1.00000000 1.7800295    4 #> 755  1.00000000 1.7900295    4 #> 756  1.00000000 1.8000295    4 #> 757  1.00000000 1.8100295    4 #> 758  1.00000000 1.8200295    4 #> 759  1.00000000 1.8300295    4 #> 760  1.00000000 1.8400295    4 #> 761  1.00000000 1.8500295    4 #> 762  1.00000000 1.8600295    4 #> 763  1.00000000 1.8700295    4 #> 764  1.00000000 1.8800295    4 #> 765  1.00000000 1.8900295    4 #> 766  1.00000000 1.9000295    4 #> 767  1.00000000 1.9100295    4 #> 768  1.00000000 1.9200295    4 #> 769  1.00000000 1.9300295    4 #> 770  1.00000000 1.9400295    4 #> 771  1.00000000 1.9500295    4 #> 772  1.00000000 1.9600295    4 #> 773  1.00000000 1.9700295    4 #> 774  1.00000000 1.9800295    4 #> 775  1.00000000 1.9900295    4 #> 776  1.00000000 2.0000295    4 #> 777  1.00000000 2.0100295    4 #> 778  1.00000000 2.0200295    4 #> 779  1.00000000 2.0300295    4 #> 780  1.00000000 2.0400295    4 #> 781  1.00000000 2.0500295    4 #> 782  1.00000000 2.0600295    4 #> 783  1.00000000 2.0700295    4 #> 784  1.00000000 2.0800295    4 #> 785  1.00000000 2.0900295    4 #> 786  1.00000000 2.1000295    4 #> 787  1.00000000 2.1100295    4 #> 788  1.00000000 2.1200295    4 #> 789  1.00000000 2.1300295    4 #> 790  1.00000000 2.1400295    4 #> 791  1.00000000 2.1500295    4 #> 792  1.00000000 2.1600295    4 #> 793  1.00000000 2.1700295    4 #> 794  1.00000000 2.1800295    4 #> 795  1.00000000 2.1900295    4 #> 796  1.00000000 2.2000295    4 #> 797  1.00000000 2.2100295    4 #> 798  1.00000000 2.2200295    4 #> 799  1.00000000 2.2300295    4 #> 800  1.00000000 2.2400295    4 #> 801  1.00000000 2.2500295    4 #> 802  1.00000000 2.2600295    4 #> 803  1.00000000 2.2700295    4 #> 804  1.00000000 2.2800295    4 #> 805  0.50000000 0.2608059    5 #> 806  0.60693010 0.2708059    5 #> 807  0.58805416 0.2808059    5 #> 808  0.71787304 0.2908059    5 #> 809  0.67985425 0.3008059    5 #> 810  0.53247181 0.3108059    5 #> 811  0.46342600 0.3208059    5 #> 812  0.47827727 0.3308059    5 #> 813  0.54999929 0.3408059    5 #> 814  0.72772625 0.3508059    5 #> 815  0.73098053 0.3608059    5 #> 816  0.60073212 0.3708059    5 #> 817  0.63968234 0.3808059    5 #> 818  0.60852464 0.3908059    5 #> 819  0.56421333 0.4008059    5 #> 820  0.52662062 0.4108059    5 #> 821  0.51735633 0.4208059    5 #> 822  0.53730495 0.4308059    5 #> 823  0.43731593 0.4408059    5 #> 824  0.53081755 0.4508059    5 #> 825  0.65253333 0.4608059    5 #> 826  0.61055686 0.4708059    5 #> 827  0.57348583 0.4808059    5 #> 828  0.63593718 0.4908059    5 #> 829  0.45690244 0.5008059    5 #> 830  0.45659608 0.5108059    5 #> 831  0.31480154 0.5208059    5 #> 832  0.30144783 0.5308059    5 #> 833  0.53434652 0.5408059    5 #> 834  0.38424480 0.5508059    5 #> 835  0.38793189 0.5608059    5 #> 836  0.34526520 0.5708059    5 #> 837  0.58100378 0.5808059    5 #> 838  0.58731666 0.5908059    5 #> 839  0.62728773 0.6008059    5 #> 840  0.52135679 0.6108059    5 #> 841  0.46805498 0.6208059    5 #> 842  0.30350819 0.6308059    5 #> 843  0.27119166 0.6408059    5 #> 844  0.25724202 0.6508059    5 #> 845  0.36792235 0.6608059    5 #> 846  0.36770474 0.6708059    5 #> 847  0.30984496 0.6808059    5 #> 848  0.29755926 0.6908059    5 #> 849  0.34813135 0.7008059    5 #> 850  0.28725731 0.7108059    5 #> 851  0.22893266 0.7208059    5 #> 852  0.09608572 0.7308059    5 #> 853  0.12437837 0.7408059    5 #> 854  0.11519218 0.7508059    5 #> 855  0.00000000 0.7608059    5 #> 856  0.00000000 0.7708059    5 #> 857  0.00000000 0.7808059    5 #> 858  0.00000000 0.7908059    5 #> 859  0.00000000 0.8008059    5 #> 860  0.00000000 0.8108059    5 #> 861  0.00000000 0.8208059    5 #> 862  0.00000000 0.8308059    5 #> 863  0.00000000 0.8408059    5 #> 864  0.00000000 0.8508059    5 #> 865  0.00000000 0.8608059    5 #> 866  0.00000000 0.8708059    5 #> 867  0.00000000 0.8808059    5 #> 868  0.00000000 0.8908059    5 #> 869  0.00000000 0.9008059    5 #> 870  0.00000000 0.9108059    5 #> 871  0.00000000 0.9208059    5 #> 872  0.00000000 0.9308059    5 #> 873  0.00000000 0.9408059    5 #> 874  0.00000000 0.9508059    5 #> 875  0.00000000 0.9608059    5 #> 876  0.00000000 0.9708059    5 #> 877  0.00000000 0.9808059    5 #> 878  0.00000000 0.9908059    5 #> 879  0.00000000 1.0008059    5 #> 880  0.00000000 1.0108059    5 #> 881  0.00000000 1.0208059    5 #> 882  0.00000000 1.0308059    5 #> 883  0.00000000 1.0408059    5 #> 884  0.00000000 1.0508059    5 #> 885  0.00000000 1.0608059    5 #> 886  0.00000000 1.0708059    5 #> 887  0.00000000 1.0808059    5 #> 888  0.00000000 1.0908059    5 #> 889  0.00000000 1.1008059    5 #> 890  0.00000000 1.1108059    5 #> 891  0.00000000 1.1208059    5 #> 892  0.00000000 1.1308059    5 #> 893  0.00000000 1.1408059    5 #> 894  0.00000000 1.1508059    5 #> 895  0.00000000 1.1608059    5 #> 896  0.00000000 1.1708059    5 #> 897  0.00000000 1.1808059    5 #> 898  0.00000000 1.1908059    5 #> 899  0.00000000 1.2008059    5 #> 900  0.00000000 1.2108059    5 #> 901  0.00000000 1.2208059    5 #> 902  0.00000000 1.2308059    5 #> 903  0.00000000 1.2408059    5 #> 904  0.00000000 1.2508059    5 #> 905  0.00000000 1.2608059    5 #> 906  0.00000000 1.2708059    5 #> 907  0.00000000 1.2808059    5 #> 908  0.00000000 1.2908059    5 #> 909  0.00000000 1.3008059    5 #> 910  0.00000000 1.3108059    5 #> 911  0.00000000 1.3208059    5 #> 912  0.00000000 1.3308059    5 #> 913  0.00000000 1.3408059    5 #> 914  0.00000000 1.3508059    5 #> 915  0.00000000 1.3608059    5 #> 916  0.00000000 1.3708059    5 #> 917  0.00000000 1.3808059    5 #> 918  0.00000000 1.3908059    5 #> 919  0.00000000 1.4008059    5 #> 920  0.00000000 1.4108059    5 #> 921  0.00000000 1.4208059    5 #> 922  0.00000000 1.4308059    5 #> 923  0.00000000 1.4408059    5 #> 924  0.00000000 1.4508059    5 #> 925  0.00000000 1.4608059    5 #> 926  0.00000000 1.4708059    5 #> 927  0.00000000 1.4808059    5 #> 928  0.00000000 1.4908059    5 #> 929  0.00000000 1.5008059    5 #> 930  0.00000000 1.5108059    5 #> 931  0.00000000 1.5208059    5 #> 932  0.00000000 1.5308059    5 #> 933  0.00000000 1.5408059    5 #> 934  0.00000000 1.5508059    5 #> 935  0.00000000 1.5608059    5 #> 936  0.00000000 1.5708059    5 #> 937  0.00000000 1.5808059    5 #> 938  0.00000000 1.5908059    5 #> 939  0.00000000 1.6008059    5 #> 940  0.00000000 1.6108059    5 #> 941  0.00000000 1.6208059    5 #> 942  0.00000000 1.6308059    5 #> 943  0.00000000 1.6408059    5 #> 944  0.00000000 1.6508059    5 #> 945  0.00000000 1.6608059    5 #> 946  0.00000000 1.6708059    5 #> 947  0.00000000 1.6808059    5 #> 948  0.00000000 1.6908059    5 #> 949  0.00000000 1.7008059    5 #> 950  0.00000000 1.7108059    5 #> 951  0.00000000 1.7208059    5 #> 952  0.00000000 1.7308059    5 #> 953  0.00000000 1.7408059    5 #> 954  0.00000000 1.7508059    5 #> 955  0.00000000 1.7608059    5 #> 956  0.00000000 1.7708059    5 #> 957  0.00000000 1.7808059    5 #> 958  0.00000000 1.7908059    5 #> 959  0.00000000 1.8008059    5 #> 960  0.00000000 1.8108059    5 #> 961  0.00000000 1.8208059    5 #> 962  0.00000000 1.8308059    5 #> 963  0.00000000 1.8408059    5 #> 964  0.00000000 1.8508059    5 #> 965  0.00000000 1.8608059    5 #> 966  0.00000000 1.8708059    5 #> 967  0.00000000 1.8808059    5 #> 968  0.00000000 1.8908059    5 #> 969  0.00000000 1.9008059    5 #> 970  0.00000000 1.9108059    5 #> 971  0.00000000 1.9208059    5 #> 972  0.00000000 1.9308059    5 #> 973  0.00000000 1.9408059    5 #> 974  0.00000000 1.9508059    5 #> 975  0.00000000 1.9608059    5 #> 976  0.00000000 1.9708059    5 #> 977  0.00000000 1.9808059    5 #> 978  0.00000000 1.9908059    5 #> 979  0.00000000 2.0008059    5 #> 980  0.00000000 2.0108059    5 #> 981  0.00000000 2.0208059    5 #> 982  0.00000000 2.0308059    5 #> 983  0.00000000 2.0408059    5 #> 984  0.00000000 2.0508059    5 #> 985  0.00000000 2.0608059    5 #> 986  0.00000000 2.0708059    5 #> 987  0.00000000 2.0808059    5 #> 988  0.00000000 2.0908059    5 #> 989  0.00000000 2.1008059    5 #> 990  0.00000000 2.1108059    5 #> 991  0.00000000 2.1208059    5 #> 992  0.00000000 2.1308059    5 #> 993  0.00000000 2.1408059    5 #> 994  0.00000000 2.1508059    5 #> 995  0.00000000 2.1608059    5 #> 996  0.00000000 2.1708059    5 #> 997  0.00000000 2.1808059    5 #> 998  0.00000000 2.1908059    5 #> 999  0.00000000 2.2008059    5 #> 1000 0.00000000 2.2108059    5 #> 1001 0.00000000 2.2208059    5 #> 1002 0.00000000 2.2308059    5 #> 1003 0.00000000 2.2408059    5 #> 1004 0.00000000 2.2508059    5 #> 1005 0.00000000 2.2608059    5"}]
